<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Automation on Curious Joe</title>
    <link>/tags/automation/</link>
    <description>Recent content in Automation on Curious Joe</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 10 Jan 2020 00:00:00 +0000</lastBuildDate>
    
        <atom:link href="/tags/automation/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Automate Your Repetitive Reports!</title>
      <link>/post/automate-your-repetitive-reports/</link>
      <pubDate>Fri, 10 Jan 2020 00:00:00 +0000</pubDate>
      
      <guid>/post/automate-your-repetitive-reports/</guid>
      <description>

&lt;div id=&#34;TOC&#34;&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#what-is-r-script-automation-and-why&#34;&gt;What is R script automation and why?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#outline-of-what-well-do-here&#34;&gt;Outline of what we’ll do here&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#part01-creating-the-report&#34;&gt;Part01: Creating the report:&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#part02-automating-the-report-reproduction&#34;&gt;Part02: Automating the report reproduction&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;

&lt;div id=&#34;what-is-r-script-automation-and-why&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;What is R script automation and why?&lt;/h2&gt;
&lt;p&gt;In most use cases R is used to analyze data, run statistical tests and build model. In doing so, data scientists constantly interact with R by writing codes and produce results from these interactions. Eventually, these results are stored, shared or presented as a report. But what if you have to reproduce the report every day or in other type of regular interval? Well, you can always pull up the R script and re-run the script. But wouldn’t it be nicer if it would be done automatically without you being in the middle to initiate R and running the script?&lt;/p&gt;
&lt;p&gt;In this article we’ll know how to do exactly that!&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;outline-of-what-well-do-here&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Outline of what we’ll do here&lt;/h2&gt;
&lt;p&gt;Broady, this article has two sections:&lt;/p&gt;
&lt;p&gt;Firstly, in this article we’ll create a report that uses a live data, meaning a data source that gets updated in regular interval.&lt;/p&gt;
&lt;p&gt;Secondly, once the report is created, we’ll automate the process of recreating the report daily to capture the updated data.&lt;/p&gt;
&lt;div id=&#34;part01-creating-the-report&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Part01: Creating the report:&lt;/h3&gt;
&lt;p&gt;Since the goal of this article is to automate the reproduction of an already built report, I have created a report already and posted here: &lt;a href=&#34;http://rpubs.com/arafath/CRAN_Report&#34; class=&#34;uri&#34;&gt;http://rpubs.com/arafath/CRAN_Report&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Feel free to go to that report and recreate it in your work station. You can name the RMarkdown script same as mine (&lt;em&gt;‘CRAN_Download_Report.Rmd’&lt;/em&gt;) and save it in the same location where you want to have your &lt;em&gt;.bat&lt;/em&gt; file and other outputs stored.&lt;/p&gt;
&lt;p&gt;What is done in that report looks like this:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Calling API from The Comprehensive R Archive Network (CRAN) to download daily and weekly download count of packages,&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;ol style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;Loading the data in R,&lt;/li&gt;
&lt;li&gt;Calculating some basic statistics e.g. counts,&lt;/li&gt;
&lt;li&gt;Visualizing the data&lt;/li&gt;
&lt;li&gt;Generating a report (html format) with the basic stats and visuals.&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;Data used:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;CRAN has an API calling which we can get the total number of times any package is downloaded during a specific time. We’ll use the package called &lt;em&gt;cranlogs&lt;/em&gt; to call the api.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;part02-automating-the-report-reproduction&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Part02: Automating the report reproduction&lt;/h3&gt;
&lt;p&gt;Once we have a working R script that produces result that we want, the reproduction workflow looks like as follows:&lt;/p&gt;
&lt;blockquote&gt;
&lt;ol style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;Open up R console or some IDE&lt;/li&gt;
&lt;li&gt;Load the required R script&lt;/li&gt;
&lt;li&gt;Run the script to produce the result&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;p&gt;In this step we’ll know how to tell R to do all these above steps &lt;strong&gt;automatically&lt;/strong&gt;. In doing so R will also complete all the steps mentioned in Part01 too.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;How does the automation work:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;To automate rerunning the R script we will use Windows Task Scheduler (WTS). Using task scheduler a user can ask windows to execute a batch file (.bat) at a regular interval. A batch file contains a series of commands that can be executed by the command line interpreter.&lt;/p&gt;
&lt;p&gt;We will create a batch file that will run an R script automatically on daily basis. Inside that R script, it’s instructed to call the .Rmd file which creates the report.&lt;/p&gt;
&lt;p&gt;
 
&lt;/p&gt;
&lt;div id=&#34;creating-the-r-script-to-run-the-.rmd-file&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;Creating the R script to run the .Rmd file&lt;/h4&gt;
&lt;p&gt;You can copy and paste the following codes in a R script and save it as &lt;em&gt;run.R&lt;/em&gt; (my r script file name):&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;# Loading libraries [install the libraries before if not already installed]
library(knitr)
library(rmarkdown)
library(mailR)

# Knits rmd file (.Rmd is saved in the working directory)
knit(&amp;#39;CRAN_Download_Report.Rmd&amp;#39;)

# Creates the html output
render(&amp;quot;CRAN_Download_Report.md&amp;quot;)

# sending email notification
send.mail(from = &amp;quot;youremail@gmail.com&amp;quot;,
      to = c(&amp;quot;testemail@gmail.com&amp;quot;),
      cc = &amp;#39;youremail@gmail.com&amp;#39;,
      replyTo = c(&amp;quot;Reply to someone else &amp;lt;youremail@gmail.com&amp;gt;&amp;quot;),
      subject = &amp;quot;Report update status&amp;quot;,
      body = &amp;quot;Daily report on CRAN package download is updated!&amp;quot;,
      smtp = list(host.name = &amp;quot;smtp.gmail.com&amp;quot;, port = 587, user.name = &amp;quot;youremail&amp;quot;, passwd =    &amp;quot;password&amp;quot;, tls = TRUE),
      authenticate = TRUE,
      send = TRUE)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;What this R script does is basically kniting the rmd file and generate a html report, save it in the working directory and send an email notification.&lt;/p&gt;
&lt;p&gt;
 
&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;running-r-from-windows-command-shell&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;Running R from Window’s command shell&lt;/h4&gt;
&lt;p&gt;Before creating the batch file, we can run our R script from command terminal manually and check if it runs as expected.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Setting up directory&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Open the windows command shell. Search for ‘cmd’ or ‘command prompt’ in the windows and open it. It will open the black command shell.&lt;/p&gt;
&lt;p&gt;Now change the command directory to your desired location using ‘cd’ command followed by your desired file location (ref: image01).&lt;/p&gt;
&lt;div class=&#34;figure&#34;&gt;
&lt;img src=&#34;/post/2020-06-23-automate-your-repetitive-reports_files/cmd_cd.png&#34; width=&#34;800&#34; alt=&#34;&#34; /&gt;
&lt;p class=&#34;caption&#34;&gt;image01&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;
 
&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Running R from command line&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;The structure of the command that we’ll use is like this:
&amp;lt;R.exe location&amp;gt; CMD BATCH &amp;lt;.R file location&amp;gt; &lt;file saving location&gt;&lt;/p&gt;
&lt;p&gt;Here,&lt;br /&gt;
- &lt;em&gt;R.exe location&lt;/em&gt; is the file location where your R executible file is located. Executing this file should open up the R console.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;em&gt;.R file location&lt;/em&gt; is the file location where you have saved your r script which will call the .Rmd file.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;em&gt;file saving location&lt;/em&gt; is the location where you want to save your execution output.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;For similiplicity, I’m using the same file location as my R working directory and location to save any outputs.&lt;/p&gt;
&lt;p&gt;These are the exact locations in my case:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;R.exe location = &amp;quot;C:\Program Files\R\R-3.6.1\bin\x64\R.exe&amp;quot; 
.R file location = &amp;quot;C:\Users\ahossa1\Personal\Learning\Automating R Script\run.R&amp;quot; 
file saving location = &amp;quot;C:\Users\ahossa1\Personal\Learning\Automating R Script\test.Rout&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Here’s the final line of code in my computer (ref: image02):&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;quot;C:\Program Files\R\R-3.6.1\bin\x64\R.exe&amp;quot; CMD BATCH &amp;quot;C:\Users\ahossa1\Personal\Learning\Projects\Automating R Script\run.R&amp;quot; &amp;quot;C:\Users\ahossa1\Personal\Learning\Projects\Automating R Script\CRAN.Rout&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;center&gt;
&lt;img src=&#34;/post/2020-06-23-automate-your-repetitive-reports_files/cmd_batch.png&#34; title=&#34;fig:&#34; width=&#34;800&#34; alt=&#34;image02&#34; /&gt;
&lt;/center&gt;
&lt;p&gt;Once you enter the command (image02) and execute it, it should run the R script, which will knit rmarkdown document and save the report. You should also receive an email with the notification!&lt;/p&gt;
&lt;p&gt;
 
&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;creating-a-batch-file-with-the-command-line-instructions&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;Creating a batch file with the command line instructions&lt;/h4&gt;
&lt;p&gt;We can save the command line instructions (image02) as a .bat file and save it. Then, any time we’ll need to re-create the report we can execute the .bat file and it’ll automatically call upon command line interface and execute the R script.&lt;/p&gt;
&lt;p&gt;To do that, open a text file (.txt). Paste the Windows shell commands in the .txt file and save it with an extension of &lt;em&gt;.bat&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;In my computer I have named it &lt;em&gt;‘run.bat’&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;&lt;font color = maroon&gt;&lt;strong&gt;In cases where you don’t need to re-create a report on regular interval, you can just use this .bat file. All you’ll have to do is to double click (or single click) the .bat file and the report will be generated with the updated data.&lt;/strong&gt;&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;
 
&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;automating-command-line-activities-using-windows-task-scheduler&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;Automating command line activities using Windows Task Scheduler&lt;/h4&gt;
&lt;p&gt;Now we’ll ask our computer to automatically call the .bat file in regular interval.&lt;/p&gt;
&lt;ol style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;In Windows search bar search for ‘Task Schduler’ and open the app. Below how it looks like in my computer&lt;/li&gt;
&lt;/ol&gt;
&lt;center&gt;
&lt;img src=&#34;/post/2020-06-23-automate-your-repetitive-reports_files/taskScheduler.png&#34; title=&#34;fig:&#34; width=&#34;800&#34; alt=&#34;image03&#34; /&gt;
&lt;/center&gt;
&lt;ol start=&#34;2&#34; style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;&lt;p&gt;Select &lt;em&gt;Create Basic Task&lt;/em&gt; (red marked on image03).&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Give the task a name&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;center&gt;
&lt;img src=&#34;/post/2020-06-23-automate-your-repetitive-reports_files/tsName.png&#34; title=&#34;fig:&#34; width=&#34;800&#34; alt=&#34;image04&#34; /&gt;
&lt;/center&gt;
&lt;ol start=&#34;4&#34; style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;Go next and select a trigger. I selected &lt;em&gt;Daily&lt;/em&gt;.&lt;/li&gt;
&lt;/ol&gt;
&lt;center&gt;
image05
&lt;img src=&#34;/post/2020-06-23-automate-your-repetitive-reports_files/tsInterval.png&#34; width=&#34;800&#34; alt=&#34;image05&#34; /&gt;
&lt;/center&gt;
&lt;ol start=&#34;5&#34; style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;Go next and select start time.&lt;/li&gt;
&lt;/ol&gt;
&lt;center&gt;
&lt;img src=&#34;/post/2020-06-23-automate-your-repetitive-reports_files/tsStart.png&#34; title=&#34;fig:&#34; width=&#34;800&#34; alt=&#34;image06&#34; /&gt;
&lt;/center&gt;
&lt;ol start=&#34;6&#34; style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;Go next and select &lt;em&gt;Start a program&lt;/em&gt; as the action.&lt;/li&gt;
&lt;/ol&gt;
&lt;center&gt;
&lt;img src=&#34;/post/2020-06-23-automate-your-repetitive-reports_files/tsEnd.png&#34; title=&#34;fig:&#34; width=&#34;800&#34; alt=&#34;image07&#34; /&gt;
&lt;/center&gt;
&lt;ol start=&#34;7&#34; style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;Go next and load the program/script (.bat file).&lt;/li&gt;
&lt;/ol&gt;
&lt;center&gt;
&lt;img src=&#34;/post/2020-06-23-automate-your-repetitive-reports_files/tsBat.png&#34; title=&#34;fig:&#34; width=&#34;800&#34; alt=&#34;image08&#34; /&gt;
&lt;/center&gt;
&lt;p&gt;
 
&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Voilà!!&lt;/strong&gt; We are done!&lt;/p&gt;
&lt;p&gt;Now every day at 3.30pm. the report below with CRAN package downloads will be created and an email notification will be sent!&lt;/p&gt;
&lt;center&gt;
&lt;img src=&#34;/post/2020-06-23-automate-your-repetitive-reports_files/output.png&#34; width=&#34;800&#34; /&gt;
&lt;/center&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
  </channel>
</rss>
